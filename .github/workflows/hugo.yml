# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.132.0  # Updated to more recent stable version
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          # Add this to avoid symlink issues
          fetch-depth: 0
      
      # Remove Dart Sass installation (Hugo Extended includes Sass)
      - name: Clean and prepare repository
        run: |
          # Clean any potential symlink issues
          find . -type l -exec test ! -e {} \; -delete 2>/dev/null || true
          # Clear Hugo cache
          hugo --gc || true
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      
      - name: Install Node.js dependencies
        run: |
          # Clean node modules first if they exist
          rm -rf node_modules 2>/dev/null || true
          rm -f package-lock.json 2>/dev/null || true
          [[ -f package.json ]] && npm ci || echo "No package.json found"
      
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          TZ: UTC  # Add timezone to avoid time-related issues
        run: |
          # Create clean cache directory
          mkdir -p ${{ runner.temp }}/hugo_cache
          # Build with verbose output for debugging
          hugo \
            --minify \
            --gc \
            --cleanDestinationDir \
            --baseURL "${{ steps.pages.outputs.base_url }}/" \
            --verbose
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
